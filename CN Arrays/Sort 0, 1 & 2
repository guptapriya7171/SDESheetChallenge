package Array;

import java.util.Arrays;
import java.util.Scanner;

Solution 1: Using inbuilt method 

package Array;

import java.util.Arrays;
import java.util.Scanner;

public class sortZeroOneTwo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Scanner sc = new Scanner(System.in);
		 int testcases = 1;
		 int times = sc.nextInt();
		
		 while(testcases <= times) {
			 int n = sc.nextInt();
			 int arr[] = new int[n];
			 
			 for(int i=0; i<n; i++) {
				 arr[i] = sc.nextInt();
			 }
			
			
			sort(arr, n);
			
			 for(int i=0; i<n; i++) {
				 System.out.print(arr[i]+" ");
			 }
			
			 testcases++;
		 }
	}
	public static void sort(int arr[], int n) {
		int l=0, m =0, h=n-1;
		Arrays.sort(arr);
	}
	

}

2. Without inbuilt method
package Array;

import java.util.Arrays;
import java.util.Scanner;

public class sortZeroOneTwo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Scanner sc = new Scanner(System.in);
		 int testcases = 1;
		 int times = sc.nextInt();
		
		 while(testcases <= times) {
			 int n = sc.nextInt();
			 int arr[] = new int[n];
			 
			 for(int i=0; i<n; i++) {
				 arr[i] = sc.nextInt();
			 }
			
			sort(arr, n);
			
			 for(int i=0; i<n; i++) {
				 System.out.print(arr[i]+" ");
			 }
			
			 testcases++;
		 }
	}
	public static void sort(int arr[], int n) {
		int l=0, m =0, h=n-1;
		
		while(m<=h) {
			if(arr[m] == 0) {
				swap(arr, l, m);
				m++;l++;
			}
			else if(arr[m] == 2) {
				swap(arr,m, h);
			    h--;
			}
			else if(arr[m]==1) {
				m++;
			}
		}
	
	}
	public static void swap(int arr[], int st, int en) {
		int temp = arr[st];
		arr[st] = arr[en];
		arr[en] = temp;
	}
	
}

