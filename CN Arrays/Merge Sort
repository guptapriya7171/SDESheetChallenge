CODE:
package SortNdSearch;

import java.util.Scanner;

public class mergeSort {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner Inp = new Scanner(System.in);
		int t  = Inp.nextInt();
		while(t-- > 0) {
			int n1 = Inp.nextInt();
			
			int arr1[] = new int[n1];
			
			for(int i=0;i<n1;i++) {
				arr1[i] = Inp.nextInt();
			}
			
			int n2 = Inp.nextInt();
			
			int arr2[] = new int[n2];
			
			for(int i=0;i<n2;i++) {
				arr2[i] = Inp.nextInt();
			}
		   mergeSort(arr1, arr2);
			
		}

	}
	public static void mergeSort(int arr1[], int arr2[]) {
		 int n1 = arr1.length;
	     int n2 = arr2.length;
	     int n3 = n1+n2;
	     int[] arr3 = new int[n3];
	     int i = 0, j = 0, k = 0;
	     while (i<n1 && j < n2)
	        {
	            if (arr1[i] < arr2[j])
	                arr3[k++] = arr1[i++];
	            else
	                arr3[k++] = arr2[j++];
	        }
	     
	        // Store remaining elements of first array
	        while (i < n1)
	            arr3[k++] = arr1[i++];
	     
	        // Store remaining elements of second array
	        while (j < n2)
	            arr3[k++] = arr2[j++];
	        
	      for(int a=0;a<n3;a++) {
	    	  System.out.print(arr3[a]+" ");
	      }
	}

}

OUTPUT:
1
5
2 3 6 8 9
4
6 4 2 1
2 3 6 4 2 1 6 8 9 
