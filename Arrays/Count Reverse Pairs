1. Brute Force Approach

import java.util.*;
 public class Main{
 static int reversePairs(int arr[]) {
      int Pairs = 0;
      for (int i = 0; i < arr.length; i++) {
        for (int j = i + 1; j < arr.length; j++) {
          if (arr[i] > 2 * arr[j]) Pairs++;
        }
      }
      return Pairs;
    }

    public static void main(String args[])
    {
        int arr[]={1,3,2,3,1};
        System.out.println("The Total Reverse Pairs are "+reversePairs(arr));
    }
 }
 
Time Complexity: O (N^2) ( Nested Loops )
Space Complexity:  O(1)

2: Optimal Solution
class Solution {
    public int[] twoSum(int[] nums, int target) {
    int s=0;
    int[] a = new int[2];
    for(int i=0;i<nums.length;i++){
        
        for(int j=0;j<nums.length;j++){
            if(i != j)
                s = nums[i] + nums[j];
            if(s == target){
                a[0] = i;
                a[1] = j;
                break;
            }
        }
    }
    return a;
    }
}
