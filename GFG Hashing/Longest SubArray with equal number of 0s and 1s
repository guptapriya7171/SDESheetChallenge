CODE:
TC: O(n)
SC: O(n)

package Hashing;

import java.util.*;

public class longestSubArr0s1s {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		 Scanner Inp = new Scanner(System.in);
	       int n = Inp.nextInt();
	       int arr[] = new int[n];
	       for(int i=0;i<n;i++) {
	    	   arr[i] = Inp.nextInt();
	    	   // 1 0 1 1 1 0 0
	       }
	      
	       int length = longestSub(arr, n);
	       System.out.println(length);
	}

	private static int longestSub(int[] arr, int n) {
		// TODO Auto-generated method stub
		
		 Map<Integer, Integer> hm = new HashMap<Integer, Integer>();
	        int sum = 0, maxLen = 0;
	        for(int i = 0; i < n; i++)
	         arr[i] = (arr[i] == 0) ? -1 : 1;
	         
	        for(int i = 0; i < n; i++)
	        {
	            sum += arr[i];
	            if (sum == 0)
	             maxLen = i+1;
	             
	            if(hm.containsKey(sum + n) == true)
	            {
	                if(maxLen < i - hm.get(sum + n))
	                 maxLen = i - hm.get(sum + n);
	                
	            }else hm.put(sum + n, i);
	        }
	        return maxLen;
	}

}
