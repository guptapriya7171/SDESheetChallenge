CODE:
package Hashing;

import java.util.*;

public class longestSubarrSum {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		 Scanner Inp = new Scanner(System.in);
	       int n = Inp.nextInt();
	       int arr[] = new int[n];
	       for(int i=0;i<n;i++) {
	    	   arr[i] = Inp.nextInt();
	    	   //1 4 13 -3 -10 5   //Target = 0
	       }
	       int sum = Inp.nextInt();
	       int result = checkSum(n,arr, sum);
	       System.out.println(result);
	}

	private static int checkSum(int n, int[] arr, int sum) {
		// TODO Auto-generated method stub
		HashMap<Integer,Integer > s = new HashMap<Integer, Integer>();
	    int pre_sum = 0;
	    int res = 0;
	    for(int i=0;i<n;i++) {
	    	pre_sum += arr[i];
	    	if(pre_sum  == sum) {
	    		return (res+1);
	    	}
	    	if(s.containsKey(pre_sum) == false) {
	    		s.put(pre_sum, i);
	    	}
	    	if(s.containsKey(pre_sum-sum)) {
	    		res = Math.max(res, i - s.get(pre_sum - sum));
	    	}
	    }
       
		return res;
	}

}
