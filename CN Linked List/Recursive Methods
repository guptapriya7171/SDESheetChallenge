CODE:
package linkedlist;

import java.util.Scanner;

public class insertNodeRecursively {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        Node<Integer> head = takeInput();
        head  = insertR(head, 20 , 2);
        printR(head);
        System.out.println();
        head = deleteR(head, 0);
        printR(head);
	}
	public static Node<Integer> insertR(Node<Integer> head, int elem, int pos){
		if(head == null && pos>0) {
			return head;
		}
		if(pos == 0) {
			Node<Integer> newNode  = new Node<>(elem);
			newNode.next = head;
			return newNode;
		}
		else {
			
			head.next = insertR(head.next, elem, pos-1);   //1,2,3,4
			return head;
		}
	}
	
	public static Node<Integer> deleteR(Node<Integer> head,  int pos){
		if(head == null) {
			return head;
		}
		if(pos == 0) {
		   head = head.next;
			return head;
		}
		else {
			head.next = deleteR(head.next, pos-1);   //1,2,3,4
			return head;
		}
	}
	public static Node<Integer> takeInput(){
	    Scanner Inp = new Scanner(System.in);
	    int data = Inp.nextInt();
		Node<Integer> head = null, tail = null;     
		while(data != -1) {
			Node<Integer> currentNode = new Node<Integer>(data);
			if(head == null) {
				head = currentNode;
				tail =  currentNode;
			}else {
				tail.next = currentNode;
				tail = currentNode; // tail = tail.next
			}
			data = Inp.nextInt();
		}
		return head;
		}
	public static void printR(Node<Integer> head) {
		if(head == null) {
			return;
		}
		System.out.print(head.data + " ");
		printR(head.next);
		
	}

}
