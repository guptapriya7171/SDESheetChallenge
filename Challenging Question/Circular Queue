Question:
 You will be given Q queries. You need to implement a cicrcular queue using  those queries.
 
CODE:
import java.util.* ;
import java.io.*; 

public class CircularQueue {
	// Initialize your data structure
    private int data[];
    private int front;  
    private int  rear;  
    private int size;
    
	public CircularQueue(int n) {
        data = new int[n];
        front = -1;
        rear = -1;
    }
    
    
	public boolean enqueue(int value) {
		// Write your code here.
       if(size == 0) {
            front = 0;
            data[front] = value;
       }
        if(size == data.length){
           return false;
       } 
        rear = (rear+1)%data.length;
        data[rear] = value;
        size++;
       
        return true;
	}

	/*
	  Dequeues top element from queue. Returns -1 if the stack is empty, otherwise
	  returns the popped element.
	*/
	public int dequeue() {
		// Write you code here.
       int temp=0;
       if(size == 0) {
            front  = -1;
            rear = -1;
            temp = front;
       }
        else{
          temp = data[front];
          front  = (front +1) % data.length;
          size--;
       }
         return temp;
        
	}
    
};
