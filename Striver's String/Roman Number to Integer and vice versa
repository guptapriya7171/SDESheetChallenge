1. Roman to Integer
class Solution {
    public int romanToInt(String s) {
       
        Map<Character, Integer> map = new HashMap();
        
         map.put('I',1);
         map.put('V',5);
         map.put('X',10);
         map.put('L',50);
         map.put('C',100);
         map.put('D',500);
         map.put('M',1000);
        
        int result = 0;
        for(int i=0;i<s.length();i++){
           if(i>0 &&  map.get(s.charAt(i))> map.get(s.charAt(i-1))){
                 result += map.get(s.charAt(i))- 2 * map.get(s.charAt(i-1)); 
           }
            else{
                
            result += map.get(s.charAt(i));
        }
            
            
        }
        return result;
    }
}

Input: s = "MCMXCIV"
Output: 1994
Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.


2.Integer To Roman

class Solution {
    public String intToRoman(int num) {
      
        String[] thousands = {"", "M", "MM", "MMM"};
      String[] hundreds = 
        {"", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"};
      String[] tens = 
        {"", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"};
      String[] units = 
        {"", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"};
      return thousands[num / 1000] + 
           hundreds[(num % 1000) / 100] + 
           tens[(num % 100) / 10] + 
           units[num % 10];
    
    }
}

Input: num = 58
Output: "LVIII"
Explanation: L = 50, V = 5, III = 3.

