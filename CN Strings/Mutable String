String literals are stored in a common pool called String pool. This facilitates
sharing of storage for strings with the same contents to conserve storage. String
objects allocated via new operator are stored in the heap memory(all non
primitives created via new operator are stored in heap memory), and there is no
sharing of storage for the same contents.

Strings in java is immutable because of a memory optimization using stringpool but we can make it mutable using StringBuffer class.
If our string is dynamic in nature and keeps on changing frequently than it is wiser to user StringBuffer.


CODE:

package String;

public class StringBufferDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
   
		StringBuffer str =  new StringBuffer("abc");
		str.setCharAt(0, 'h');
		System.out.println(str);
	}

}
