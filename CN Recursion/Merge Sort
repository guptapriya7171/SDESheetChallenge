package Recursion;

import java.util.Scanner;

public class mergeSort {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner Inp = new Scanner(System.in);
	    int t = Inp.nextInt();
	    while(t-- >0) {
	    	int size = Inp.nextInt();
	    	int array[] = new int[size];
	    	
	    	for (int i = 0; i < size; i++) {
				array[i] = Inp.nextInt();
			}
	       mSort(array);
	       
	       for(int i=0;i<array.length;i++) {
	    	   System.out.print(array[i] +" ");
	       }
	    }
	}
	public static void mSort(int arr[]) {
		if(arr.length<=1)return;
		
		int b[] = new int[arr.length/2];
		int c[] = new int[arr.length-b.length];
		
		 for(int i=0;i<arr.length/2;i++){
             b[i] = arr[i];
         }
       
         for(int i= arr.length/2;i<arr.length;i++){
               c[i-arr.length/2] = arr[i];
         }
       mSort(b);
       mSort(c);
       merge(b,c,arr);
	}
	
	public static void merge(int [] s1, int []s2, int []d){
	    
        int i=0; int j=0; int k=0;
    
        while(i < s1.length && j < s2.length){
            
             if(s1[i]<=s2[j]){
                d[k]=s1[i];
                 i++; k++;
                 }
            
            else
            {
               d[k]=s2[j];
                k++; j++;
             }
            
         }

     if(i<s1.length){
           while(i<s1.length)
           {
               d[k]=s1[i];
                 i++; k++;  
            }
     }
       if(j<s2.length){
         while(j<s2.length)
         {
             d[k]=s2[j];
             j++;
             k++; 
         }
       }
}
	

}
