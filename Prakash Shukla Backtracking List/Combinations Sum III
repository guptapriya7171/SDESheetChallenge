CODE:
class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
       List<List<Integer>> subsets = new ArrayList();
       generateSubsets(1, n,  new ArrayList(), subsets, k);
       return subsets; 
    }
    public static void generateSubsets(int start, int n, List<Integer> current, List<List<Integer>>  subsets, int k) {
		
		if(current.size() == k) {
            int sum=0;
            for(int j=0;j<k;j++){
            sum += current.get(j);
            }
            if(sum == n){
			subsets.add(new ArrayList(current));
            return;
            }
        
		}
		
		for(int i=start; i<=n; i++) {

            int tt=k;
            int total = k;
            while(total-- >0){
             tt +=total; 
            }
            if(tt > n){
            System.out.println("[]");
            return;
            }
            
			current.add(i);
		    generateSubsets(i+1, n,  current, subsets, k);
		    current.remove(current.size()-1);
		}
	}
}
