If n = ..someInt then Power p = 2^3;

Iterative Method:
package backtracking;

import java.util.*;

public class arrayBt {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Scanner sc = new Scanner(System.in);
		
		int n = sc.nextInt();
		int nums[] = new int[n];
		for(int i=0;i<n;i++) {
			nums[i] = sc.nextInt();
		}
		 List<List<Integer>> output = new ArrayList(); 
		
		output = subsets(nums);
	
	    System.out.print(output);
	}
	public static List<List<Integer>> subsets(int[] nums) {
	       List<List<Integer>> res = new ArrayList(); //powerSet 
	       
	       res.add(new ArrayList());
	      
	       for(int num : nums){    //1 2 3
	         
	       int n = res.size();        //1    //2   //4
	         
	       for(int j=0;j<n;j++){ //0times

	             List<Integer> temp = new ArrayList(res.get(j));   //[] [1][2]
	             temp.add(num);//[1]  // [2]       //[3]
	             res.add(temp); // [][1]  //[2][1,2]     // [3][1,3],[2,3],[1,2,3]
	           
	         }
	       }
	       return res;
	    }

}
